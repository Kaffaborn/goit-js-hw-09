{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,SAGpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACpC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC7BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXbL,EAAKa,iBAAiB,UAetB,SAAkBC,GAChBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOjB,EAAKK,MAAMa,OAC9B,MAAMC,EAAOF,OAAOjB,EAAKmB,KAAKD,OACxBE,EAASpB,EAAKoB,OAAOF,MAE3B,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAC3BlB,EAAckB,EAAGL,GAAOM,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACxCkB,QAAQC,IAAI,uBAAqBpB,QAAiBC,MAAU,IAC3DoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MACpBkB,QAAQC,IAAI,sBAAoBpB,QAAeC,MAAU,IAG3DW,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form');\nform.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  let delay = Number(form.delay.value);\n  const step = Number(form.step.value)\n  const amount = form.amount.value;\n  \n  for (let i = 1; i <= amount; i ++) {\n    createPromise(i, delay).then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    }).catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    \n    delay += step;\n  }\n}\n\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delay1","Number","value","step","amount","i","then","console","log","catch"],"version":3,"file":"03-promises.8ef0b199.js.map"}